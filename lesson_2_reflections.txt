What happens when you initialize a repository? Why do you need to do it?

A .git directory is added and git begins to use version control on the directory.  It needs to be done so that Git knows what to keep track of.

How is the staging area different from the working directory and the repository? What value do you think it offers?

It is not an actual directory.  The value is in seeing which files are changing before a commit is done.

How can you use the staging area to make sure you have one commit per logical change?

Use it to verify the files that have been changed and that need to be committed.

What are some situations when branches would be helpful in keeping your history organized? How would branches help?

It would be helpful in situations where experiments need to be made or a different version of the software needs to be made.  They help by perserving the code in the master branch.

How do the diagrams help you visualize the branch structure?

Git branch and git log can be difficult to grasp from just reading text, creating a diagram help create a visual map of the different paths the project has taken.

What is the result of merging two branches together? Why do we represent it in the diagram the way we do?

Merging ttwo branches combines the changes in both branches together.  It is represented as a convergence of paths to show that the commits of both branches are now accessible in the newly merged branch.

What are the pros and cons of Gitâ€™s automatic merging vs. always doing merges manually?

Automatic merging makes it so that the developers do not have to do the tedious task of double checking code that can obviously be combined.